module bcd_fadd_1(
    input [3:0] a,
    input [3:0] b,
    input     cin,
    output reg  cout,
    output reg [3:0] sum );
    reg [3:0]sum_temp;
    reg cout_temp;
    always @(a or b or cin)
        begin
            {cout_temp,sum_temp}=a+b+cin;
            if((sum_temp>4'b1001)|cout_temp)
            {cout,sum}=a+b+cin+4'b0110;
            else
            {cout,sum}=a+b+cin;
        end
                
endmodule






module top_module ( 
    input [15:0] a, b,
    input cin,
    output cout,
    output [15:0] sum );
    wire cout_0,cout_1,cout_2;
    bcd_fadd_1 u0(.a(a[3:0]),.b(b[3:0]),.cin(cin),.cout(cout_0),.sum(sum[3:0]));
    bcd_fadd_1 u1(.a(a[7:4]),.b(b[7:4]),.cin(cout_0),.cout(cout_1),.sum(sum[7:4]));
    bcd_fadd_1 u2(.a(a[11:8]),.b(b[11:8]),.cin(cout_1),.cout(cout_2),.sum(sum[11:8]));
    bcd_fadd_1 u3(.a(a[15:12]),.b(b[15:12]),.cin(cout_2),.cout(cout),.sum(sum[15:12]));

endmodule
